# Use the .NET 9.0 SDK image for the build stage.
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# To resolve the segmentation fault (exit code 139) that occurs when running protoc from Grpc.Tools in an ARM64 environment,
# we install a stable protoc compiler directly via the system package manager.
RUN apt-get update && apt-get install -y protobuf-compiler

# To use the Docker cache efficiently, first copy the project files (*.csproj), solution file (*.sln),
# and the dependent protocol buffer files (*.proto).
# Since these files do not change often, this layer is likely to be cached.
COPY ["*.sln", "./"]
COPY ["HelloService/HelloService.csproj", "HelloService/"]
COPY ["HelloApp/HelloApp.csproj", "HelloApp/"]
COPY ["Protos/", "Protos/"]
RUN dotnet restore "HelloService/HelloService.csproj"

# Copy the rest of the source code.
COPY . .
WORKDIR "/src/HelloService"
RUN dotnet publish "HelloService.csproj" -c Release -o /app/publish

# Use the lighter ASP.NET runtime image for the final image.
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app
COPY --from=build /app/publish .

EXPOSE 8080

ENTRYPOINT ["dotnet", "HelloService.dll"]
